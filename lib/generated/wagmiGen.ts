// Generated by @wagmi/cli@1.0.0 on 5/12/2023 at 1:56:08 PM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
  useNetwork,
  Address,
} from "wagmi";
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from "wagmi/actions";

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: "event",
    inputs: [
      { name: "owner", type: "address", indexed: true },
      { name: "spender", type: "address", indexed: true },
      { name: "value", type: "uint256", indexed: false },
    ],
    name: "Approval",
  },
  {
    type: "event",
    inputs: [
      { name: "from", type: "address", indexed: true },
      { name: "to", type: "address", indexed: true },
      { name: "value", type: "uint256", indexed: false },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", type: "address" },
      { name: "spender", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", type: "uint8" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "sender", type: "address" },
      { name: "recipient", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", type: "bool" }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FairAuction
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export const fairAuctionABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "projectToken",
        internalType: "contract IERC20",
        type: "address",
      },
      {
        name: "projectEsManager",
        internalType: "contract IEsManager",
        type: "address",
      },
      { name: "saleToken", internalType: "contract IERC20", type: "address" },
      { name: "startTime", internalType: "uint256", type: "uint256" },
      { name: "endTime", internalType: "uint256", type: "uint256" },
      { name: "treasury_", internalType: "address", type: "address" },
      { name: "maxToDistribute", internalType: "uint256", type: "uint256" },
      { name: "minToRaise", internalType: "uint256", type: "uint256" },
      { name: "maxToRaise", internalType: "uint256", type: "uint256" },
      { name: "csrNftId", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Buy",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Claim",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "ClaimRefEarnings",
  },
  { type: "event", anonymous: false, inputs: [], name: "DiscountUpdated" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "token",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "EmergencyWithdraw",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "referrer",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "NewRefEarning",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "previousOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "END_TIME",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "MAX_PROJECT_TOKENS_TO_DISTRIBUTE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "MAX_RAISE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "MIN_TOTAL_RAISED_FOR_MAX_PROJECT_TOKEN",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PROJECT_ES_MANAGER",
    outputs: [
      { name: "", internalType: "contract IEsManager", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PROJECT_TOKEN",
    outputs: [{ name: "", internalType: "contract IERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "REFERRAL_SHARE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "SALE_TOKEN",
    outputs: [{ name: "", internalType: "contract IERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "START_TIME",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "TANK",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "TURNSTILE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "VELOCIMETER_SHARE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "burnUnsoldTokens",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "referralAddress", internalType: "address", type: "address" },
    ],
    name: "buy",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "claim",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "claimRefEarnings",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "emergencyWithdrawFunds",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "getExpectedClaimAmount",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getRemainingTime",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "hasEnded",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "hasStarted",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "returnUnsoldTokens",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "users",
        internalType: "struct FairAuction.DiscountSettings[]",
        type: "tuple[]",
        components: [
          { name: "account", internalType: "address", type: "address" },
          { name: "discount", internalType: "uint256", type: "uint256" },
          { name: "eligibleAmount", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
    name: "setUsersDiscount",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "tokensToDistribute",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalAllocation",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalRaised",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "treasury",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "unsoldTokensDealt",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "userInfo",
    outputs: [
      { name: "allocation", internalType: "uint256", type: "uint256" },
      { name: "contribution", internalType: "uint256", type: "uint256" },
      { name: "discount", internalType: "uint256", type: "uint256" },
      {
        name: "discountEligibleAmount",
        internalType: "uint256",
        type: "uint256",
      },
      { name: "ref", internalType: "address", type: "address" },
      { name: "refEarnings", internalType: "uint256", type: "uint256" },
      { name: "claimedRefEarnings", internalType: "uint256", type: "uint256" },
      { name: "hasClaimed", internalType: "bool", type: "bool" },
    ],
  },
] as const;

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export const fairAuctionAddress = {
  5: "0x13661E41f6AFF14DE677bbD692601bE809a14F76",
  7700: "0x0b776552c1Aef1Dc33005DD25AcDA22493b6615d",
  42161: "0x0b776552c1Aef1Dc33005DD25AcDA22493b6615d",
  421613: "0x0b776552c1Aef1Dc33005DD25AcDA22493b6615d",
} as const;

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export const fairAuctionConfig = {
  address: fairAuctionAddress,
  abi: fairAuctionABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    "abi"
  > = {} as any
) {
  return useContractRead({ abi: erc20ABI, ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"allowance"`.
 */
export function useErc20Allowance<
  TFunctionName extends "allowance",
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: "allowance",
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc20BalanceOf<
  TFunctionName extends "balanceOf",
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: "balanceOf",
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decimals"`.
 */
export function useErc20Decimals<
  TFunctionName extends "decimals",
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: "decimals",
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"name"`.
 */
export function useErc20Name<
  TFunctionName extends "name",
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: "name",
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc20Symbol<
  TFunctionName extends "symbol",
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: "symbol",
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc20TotalSupply<
  TFunctionName extends "totalSupply",
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    "abi" | "functionName"
  > = {} as any
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: "totalSupply",
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Write<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof erc20ABI, string>["request"]["abi"],
        TFunctionName,
        TMode
      >
    : UseContractWriteConfig<typeof erc20ABI, TFunctionName, TMode> & {
        abi?: never;
      } = {} as any
) {
  return useContractWrite<typeof erc20ABI, TFunctionName, TMode>({
    abi: erc20ABI,
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc20Approve<TMode extends WriteContractMode = undefined>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof erc20ABI,
          "approve"
        >["request"]["abi"],
        "approve",
        TMode
      > & { functionName?: "approve" }
    : UseContractWriteConfig<typeof erc20ABI, "approve", TMode> & {
        abi?: never;
        functionName?: "approve";
      } = {} as any
) {
  return useContractWrite<typeof erc20ABI, "approve", TMode>({
    abi: erc20ABI,
    functionName: "approve",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function useErc20Transfer<TMode extends WriteContractMode = undefined>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof erc20ABI,
          "transfer"
        >["request"]["abi"],
        "transfer",
        TMode
      > & { functionName?: "transfer" }
    : UseContractWriteConfig<typeof erc20ABI, "transfer", TMode> & {
        abi?: never;
        functionName?: "transfer";
      } = {} as any
) {
  return useContractWrite<typeof erc20ABI, "transfer", TMode>({
    abi: erc20ABI,
    functionName: "transfer",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc20TransferFrom<
  TMode extends WriteContractMode = undefined
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof erc20ABI,
          "transferFrom"
        >["request"]["abi"],
        "transferFrom",
        TMode
      > & { functionName?: "transferFrom" }
    : UseContractWriteConfig<typeof erc20ABI, "transferFrom", TMode> & {
        abi?: never;
        functionName?: "transferFrom";
      } = {} as any
) {
  return useContractWrite<typeof erc20ABI, "transferFrom", TMode>({
    abi: erc20ABI,
    functionName: "transferFrom",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function usePrepareErc20Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>,
    "abi"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc20Approve(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, "approve">,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: "approve",
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, "approve">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareErc20Transfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, "transfer">,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: "transfer",
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, "transfer">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc20TransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, "transferFrom">,
    "abi" | "functionName"
  > = {} as any
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: "transferFrom",
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, "transferFrom">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, TEventName>,
    "abi"
  > = {} as any
) {
  return useContractEvent({
    abi: erc20ABI,
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc20ApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, "Approval">,
    "abi" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: "Approval",
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, "Approval">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc20TransferEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, "Transfer">,
    "abi" | "eventName"
  > = {} as any
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: "Transfer",
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, "Transfer">);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"END_TIME"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionEndTime<
  TFunctionName extends "END_TIME",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "END_TIME",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"MAX_PROJECT_TOKENS_TO_DISTRIBUTE"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionMaxProjectTokensToDistribute<
  TFunctionName extends "MAX_PROJECT_TOKENS_TO_DISTRIBUTE",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "MAX_PROJECT_TOKENS_TO_DISTRIBUTE",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"MAX_RAISE"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionMaxRaise<
  TFunctionName extends "MAX_RAISE",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "MAX_RAISE",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"MIN_TOTAL_RAISED_FOR_MAX_PROJECT_TOKEN"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionMinTotalRaisedForMaxProjectToken<
  TFunctionName extends "MIN_TOTAL_RAISED_FOR_MAX_PROJECT_TOKEN",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "MIN_TOTAL_RAISED_FOR_MAX_PROJECT_TOKEN",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"PROJECT_ES_MANAGER"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionProjectEsManager<
  TFunctionName extends "PROJECT_ES_MANAGER",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "PROJECT_ES_MANAGER",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"PROJECT_TOKEN"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionProjectToken<
  TFunctionName extends "PROJECT_TOKEN",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "PROJECT_TOKEN",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"REFERRAL_SHARE"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionReferralShare<
  TFunctionName extends "REFERRAL_SHARE",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "REFERRAL_SHARE",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"SALE_TOKEN"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionSaleToken<
  TFunctionName extends "SALE_TOKEN",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "SALE_TOKEN",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"START_TIME"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionStartTime<
  TFunctionName extends "START_TIME",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "START_TIME",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"TANK"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionTank<
  TFunctionName extends "TANK",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "TANK",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"TURNSTILE"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionTurnstile<
  TFunctionName extends "TURNSTILE",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "TURNSTILE",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"VELOCIMETER_SHARE"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionVelocimeterShare<
  TFunctionName extends "VELOCIMETER_SHARE",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "VELOCIMETER_SHARE",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"getExpectedClaimAmount"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionGetExpectedClaimAmount<
  TFunctionName extends "getExpectedClaimAmount",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "getExpectedClaimAmount",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"getRemainingTime"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionGetRemainingTime<
  TFunctionName extends "getRemainingTime",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "getRemainingTime",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"hasEnded"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionHasEnded<
  TFunctionName extends "hasEnded",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "hasEnded",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"hasStarted"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionHasStarted<
  TFunctionName extends "hasStarted",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "hasStarted",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"owner"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionOwner<
  TFunctionName extends "owner",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "owner",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"tokensToDistribute"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionTokensToDistribute<
  TFunctionName extends "tokensToDistribute",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "tokensToDistribute",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"totalAllocation"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionTotalAllocation<
  TFunctionName extends "totalAllocation",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "totalAllocation",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"totalRaised"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionTotalRaised<
  TFunctionName extends "totalRaised",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "totalRaised",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"treasury"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionTreasury<
  TFunctionName extends "treasury",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "treasury",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"unsoldTokensDealt"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionUnsoldTokensDealt<
  TFunctionName extends "unsoldTokensDealt",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "unsoldTokensDealt",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"userInfo"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionUserInfo<
  TFunctionName extends "userInfo",
  TSelectData = ReadContractResult<typeof fairAuctionABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof fairAuctionABI, TFunctionName, TSelectData>,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "userInfo",
    ...config,
  } as UseContractReadConfig<
    typeof fairAuctionABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          string
        >["request"]["abi"],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof fairAuctionABI, TFunctionName, TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, TFunctionName, TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"burnUnsoldTokens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionBurnUnsoldTokens<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "burnUnsoldTokens"
        >["request"]["abi"],
        "burnUnsoldTokens",
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "burnUnsoldTokens";
      }
    : UseContractWriteConfig<
        typeof fairAuctionABI,
        "burnUnsoldTokens",
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "burnUnsoldTokens";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "burnUnsoldTokens", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "burnUnsoldTokens",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"buy"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionBuy<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "buy"
        >["request"]["abi"],
        "buy",
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: "buy" }
    : UseContractWriteConfig<typeof fairAuctionABI, "buy", TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "buy";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "buy", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "buy",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"claim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionClaim<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "claim"
        >["request"]["abi"],
        "claim",
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: "claim" }
    : UseContractWriteConfig<typeof fairAuctionABI, "claim", TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "claim";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "claim", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "claim",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"claimRefEarnings"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionClaimRefEarnings<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "claimRefEarnings"
        >["request"]["abi"],
        "claimRefEarnings",
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "claimRefEarnings";
      }
    : UseContractWriteConfig<
        typeof fairAuctionABI,
        "claimRefEarnings",
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "claimRefEarnings";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "claimRefEarnings", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "claimRefEarnings",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"emergencyWithdrawFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionEmergencyWithdrawFunds<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "emergencyWithdrawFunds"
        >["request"]["abi"],
        "emergencyWithdrawFunds",
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "emergencyWithdrawFunds";
      }
    : UseContractWriteConfig<
        typeof fairAuctionABI,
        "emergencyWithdrawFunds",
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "emergencyWithdrawFunds";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<
    typeof fairAuctionABI,
    "emergencyWithdrawFunds",
    TMode
  >({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "emergencyWithdrawFunds",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "renounceOwnership"
        >["request"]["abi"],
        "renounceOwnership",
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "renounceOwnership";
      }
    : UseContractWriteConfig<
        typeof fairAuctionABI,
        "renounceOwnership",
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "renounceOwnership";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "renounceOwnership", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "renounceOwnership",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"returnUnsoldTokens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionReturnUnsoldTokens<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "returnUnsoldTokens"
        >["request"]["abi"],
        "returnUnsoldTokens",
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "returnUnsoldTokens";
      }
    : UseContractWriteConfig<
        typeof fairAuctionABI,
        "returnUnsoldTokens",
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "returnUnsoldTokens";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "returnUnsoldTokens", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "returnUnsoldTokens",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"setUsersDiscount"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionSetUsersDiscount<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "setUsersDiscount"
        >["request"]["abi"],
        "setUsersDiscount",
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "setUsersDiscount";
      }
    : UseContractWriteConfig<
        typeof fairAuctionABI,
        "setUsersDiscount",
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "setUsersDiscount";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "setUsersDiscount", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "setUsersDiscount",
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof fairAuctionAddress
>(
  config: TMode extends "prepared"
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof fairAuctionABI,
          "transferOwnership"
        >["request"]["abi"],
        "transferOwnership",
        TMode
      > & {
        address?: Address;
        chainId?: TChainId;
        functionName?: "transferOwnership";
      }
    : UseContractWriteConfig<
        typeof fairAuctionABI,
        "transferOwnership",
        TMode
      > & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: "transferOwnership";
      } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite<typeof fairAuctionABI, "transferOwnership", TMode>({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "transferOwnership",
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, TFunctionName>,
    "abi" | "address"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof fairAuctionABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"burnUnsoldTokens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionBurnUnsoldTokens(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "burnUnsoldTokens">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "burnUnsoldTokens",
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fairAuctionABI,
    "burnUnsoldTokens"
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"buy"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionBuy(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "buy">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "buy",
    ...config,
  } as UsePrepareContractWriteConfig<typeof fairAuctionABI, "buy">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"claim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionClaim(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "claim">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "claim",
    ...config,
  } as UsePrepareContractWriteConfig<typeof fairAuctionABI, "claim">);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"claimRefEarnings"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionClaimRefEarnings(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "claimRefEarnings">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "claimRefEarnings",
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fairAuctionABI,
    "claimRefEarnings"
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"emergencyWithdrawFunds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionEmergencyWithdrawFunds(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof fairAuctionABI,
      "emergencyWithdrawFunds"
    >,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "emergencyWithdrawFunds",
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fairAuctionABI,
    "emergencyWithdrawFunds"
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "renounceOwnership">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "renounceOwnership",
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fairAuctionABI,
    "renounceOwnership"
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"returnUnsoldTokens"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionReturnUnsoldTokens(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "returnUnsoldTokens">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "returnUnsoldTokens",
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fairAuctionABI,
    "returnUnsoldTokens"
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"setUsersDiscount"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionSetUsersDiscount(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "setUsersDiscount">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "setUsersDiscount",
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fairAuctionABI,
    "setUsersDiscount"
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link fairAuctionABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function usePrepareFairAuctionTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof fairAuctionABI, "transferOwnership">,
    "abi" | "address" | "functionName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    functionName: "transferOwnership",
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof fairAuctionABI,
    "transferOwnership"
  >);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, TEventName>,
    "abi" | "address"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__ and `eventName` set to `"Buy"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionBuyEvent(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, "Buy">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    eventName: "Buy",
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, "Buy">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__ and `eventName` set to `"Claim"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionClaimEvent(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, "Claim">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    eventName: "Claim",
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, "Claim">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__ and `eventName` set to `"ClaimRefEarnings"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionClaimRefEarningsEvent(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, "ClaimRefEarnings">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    eventName: "ClaimRefEarnings",
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, "ClaimRefEarnings">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__ and `eventName` set to `"DiscountUpdated"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionDiscountUpdatedEvent(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, "DiscountUpdated">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    eventName: "DiscountUpdated",
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, "DiscountUpdated">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__ and `eventName` set to `"EmergencyWithdraw"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionEmergencyWithdrawEvent(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, "EmergencyWithdraw">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    eventName: "EmergencyWithdraw",
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, "EmergencyWithdraw">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__ and `eventName` set to `"NewRefEarning"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionNewRefEarningEvent(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, "NewRefEarning">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    eventName: "NewRefEarning",
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, "NewRefEarning">);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link fairAuctionABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0x13661E41f6AFF14DE677bbD692601bE809a14F76)
 * - [__View Contract on Canto Canto Evm Explorer Blockscout__](https://evm.explorer.canto.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0x0b776552c1aef1dc33005dd25acda22493b6615d)
 */
export function useFairAuctionOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof fairAuctionABI, "OwnershipTransferred">,
    "abi" | "address" | "eventName"
  > & { chainId?: keyof typeof fairAuctionAddress } = {} as any
) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: fairAuctionABI,
    address: fairAuctionAddress[chainId as keyof typeof fairAuctionAddress],
    eventName: "OwnershipTransferred",
    ...config,
  } as UseContractEventConfig<typeof fairAuctionABI, "OwnershipTransferred">);
}
